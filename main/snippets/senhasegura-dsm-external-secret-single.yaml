---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: example-secret
spec:
  refreshInterval: "30s"
  secretStoreRef:
    name: senhasegura
    kind: SecretStore
  target:
    name: example-secret
  data:
  # Define API_SETTINGS Kubernetes Secret key, with json-encoded values from senhasegura secret with identifier "api-settings"
  - secretKey: API_SETTINGS
    remoteRef:
      key: api-settings # Secret Identifier in senhasegura
  # Define API_SETTINGS_TOKEN Kubernetes Secret key, with single secret key (TOKEN) from senhasegura as string
  - secretKey: API_SETTINGS_TOKEN
    remoteRef:
      key: api-settings # Secret Identifier in senhasegura
      property: TOKEN # Optional, Key name within secret
  # Define API_SETTINGS_TOKEN_ENCRYPT Kubernetes Secret key, with single secret key (TOKEN_ENCRYPT) from senhasegura as sensitive data
  - secretKey: API_SETTINGS_TOKEN_ENCRYPT
    remoteRef:
      key: api-settings # Secret Identifier in senhasegura
      property: TOKEN_ENCRYPTED
  # Define API_SETTINGS_TOKEN_DECRYPT Kubernetes Secret key, with single secret key (TOKEN_ENCRYPT) from senhasegura as string
  - secretKey: API_SETTINGS_TOKEN_DECRYPT
    remoteRef:
      decodingStrategy: Base64 # Required because sensitive data encrypted is returned in base64 encoding
      decryptingStrategy:
        hash: SHA1 # Optinal, default value. At the moment, only this hash is supported
        privateKeyType: PKCS8 # Optinal, default value. At the moment, only this type is supported
        scheme: RSA-OAEP # Required in cases of data decrypt occurring in the external secret operator. At the moment, only this scheme is supported.
      key: api-settings # Secret Identifier in senhasegura
      property: TOKEN_ENCRYPTED
